<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on James Liu's Space</title><link>https://jamesliu.space/posts/</link><description>Recent content in Posts on James Liu's Space</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Sun, 29 Dec 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://jamesliu.space/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>2024 Year-End Review</title><link>https://jamesliu.space/posts/life-24-review/</link><pubDate>Sun, 29 Dec 2024 00:00:00 +0000</pubDate><guid>https://jamesliu.space/posts/life-24-review/</guid><description>&lt;p>&lt;strong>Note&lt;/strong>: This is a translation of my Chinese year-end review. I wrote it &lt;a href="https://mp.weixin.qq.com/s?__biz=MzkzNDE4ODE3MQ==&amp;amp;mid=2247484058&amp;amp;idx=1&amp;amp;sn=30ca0c3355f8fbc2f235baafe59af948&amp;amp;chksm=c341d8a67b400b9bea4b83b4233773a7cfcc9a83b2c0e7919e7c7ef79f4c71e322441f653617&amp;amp;scene=126&amp;amp;sessionid=1747372718#rd" target="_blank" rel="noopener noreferrer">
in Chinese
&lt;/a> because I wanted to express my thoughts more accurately. I&amp;rsquo;ve translated it into English using &lt;strong>Gemini Flash 2.0&lt;/strong> to share with more people. I hope you can understand and forgive any awkwardness in the translation.
&lt;img src="https://raw.githubusercontent.com/Jiaaming/blogImage/main/pic/26DA4982-4CE0-43C3-A68D-84F9B6FAE144.jpeg" alt="26DA4982-4CE0-43C3-A68D-84F9B6FAE144">&lt;/p>
&lt;p>People often say they want to go back to the past because they&amp;rsquo;re not happy with the present—but honestly, I&amp;rsquo;ve never really wanted to go back.&lt;/p></description></item><item><title>Microsoft Intern Summary: Optimizing VSCode Gradle Extension</title><link>https://jamesliu.space/posts/ms-intern-summary/</link><pubDate>Sat, 03 Aug 2024 00:00:00 +0000</pubDate><guid>https://jamesliu.space/posts/ms-intern-summary/</guid><description>&lt;ul>
&lt;li>&lt;a href="#project-background" target="_blank" rel="noopener noreferrer">
Project Background
&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#communication-between-servers" target="_blank" rel="noopener noreferrer">
Communication Between Servers
&lt;/a>&lt;/li>
&lt;li>&lt;a href="#architecture-before-the-merge" target="_blank" rel="noopener noreferrer">
Architecture Before the Merge
&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#why-merge" target="_blank" rel="noopener noreferrer">
Why Merge?
&lt;/a>&lt;/li>
&lt;li>&lt;a href="#how-to-merge" target="_blank" rel="noopener noreferrer">
How to Merge
&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#architecture-after-the-merge" target="_blank" rel="noopener noreferrer">
Architecture After the Merge
&lt;/a>&lt;/li>
&lt;li>&lt;a href="#step-1-merging-task-server-and-build-server" target="_blank" rel="noopener noreferrer">
Step 1: Merging Task Server and Build Server
&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#challenges" target="_blank" rel="noopener noreferrer">
Challenges
&lt;/a>&lt;/li>
&lt;li>&lt;a href="#connection-workflow" target="_blank" rel="noopener noreferrer">
Connection Workflow
&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#step-2-merging-language-server-to-gradle-server" target="_blank" rel="noopener noreferrer">
Step 2: Merging Language Server to Gradle Server
&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#performance-after-merge" target="_blank" rel="noopener noreferrer">
Performance After Merge
&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#how-was-performance-measured" target="_blank" rel="noopener noreferrer">
How Was Performance Measured?
&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#pre-merge-memory-monitoring" target="_blank" rel="noopener noreferrer">
Pre-Merge Memory Monitoring
&lt;/a>&lt;/li>
&lt;li>&lt;a href="#post-merge-memory-monitoring" target="_blank" rel="noopener noreferrer">
Post-Merge Memory Monitoring
&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#performance-results" target="_blank" rel="noopener noreferrer">
Performance Results
&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#small" target="_blank" rel="noopener noreferrer">
Small
&lt;/a>&lt;/li>
&lt;li>&lt;a href="#medium" target="_blank" rel="noopener noreferrer">
Medium
&lt;/a>&lt;/li>
&lt;li>&lt;a href="#large" target="_blank" rel="noopener noreferrer">
Large
&lt;/a>&lt;/li>
&lt;li>&lt;a href="#super-large" target="_blank" rel="noopener noreferrer">
Super Large
&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="project-background">Project Background&lt;/h2>
&lt;p>&lt;img src="https://raw.githubusercontent.com/Jiaaming/blogImage/main/pic/20240803213701.png" alt="Project Image">&lt;/p></description></item><item><title>Building a Simple AI Conversational Assistant with Langchain.js</title><link>https://jamesliu.space/posts/tech-pet-sys/</link><pubDate>Mon, 22 Apr 2024 00:00:00 +0000</pubDate><guid>https://jamesliu.space/posts/tech-pet-sys/</guid><description>&lt;p>For my final undergraduate professional course, Software Development Practicum, I was tasked with developing a virtual veterinary hospital learning system that required implementing an AI conversational assistant. The requirements were somewhat ambiguous. Considering that the other components consisted mainly of basic CRUD operations, my initial approach was to explore integrating these operations with an AI dialogue system capable of querying information about medications and clinical cases stored in the database.&lt;/p></description></item><item><title>2023 Year-End Review</title><link>https://jamesliu.space/posts/life-23-review/</link><pubDate>Sun, 31 Dec 2023 00:00:00 +0000</pubDate><guid>https://jamesliu.space/posts/life-23-review/</guid><description>&lt;p>&lt;strong>Note&lt;/strong>: This is a translation of my Chinese year-end review. I wrote it in Chinese because I wanted to express my thoughts more accurately. I&amp;rsquo;ve translated it into English using &lt;strong>Gemini Flash 2.0&lt;/strong> to share with more people. I hope you can understand and forgive any awkwardness in the translation.&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/Jiaaming/blogImage/main/pic/000095820020.jpg" alt="000095820020">&lt;/p>
&lt;p>The weirdest feeling I had this year was probably when people asked my age.&lt;/p>
&lt;p>“How old are you?”&lt;/p>
&lt;p>I&amp;rsquo;d always pause and think, &amp;ldquo;Hmm&amp;hellip;&amp;rdquo; I knew I was somewhere in my 20s, felt like maybe 22 or 23. But just saying &amp;ldquo;about twenty&amp;rdquo; felt too vague, so I had to actually remember my birthday and do the math. It always took like 3-5 seconds to figure out I&amp;rsquo;m actually 21.&lt;/p></description></item><item><title>Use Swagger to show API in Django</title><link>https://jamesliu.space/posts/chapter-10/</link><pubDate>Sat, 29 Jul 2023 00:00:00 +0000</pubDate><guid>https://jamesliu.space/posts/chapter-10/</guid><description>&lt;h1 id="use-swagger-to-show-api-in-django">Use Swagger to show API in Django&lt;/h1>
&lt;p>Document: &lt;a href="https://drf-yasg.readthedocs.io/en/stable/readme.html#usage" target="_blank" rel="noopener noreferrer">
https://drf-yasg.readthedocs.io/en/stable/readme.html#usage
&lt;/a>&lt;/p>
&lt;p>A good example: &lt;a href="https://debrajbhal.hashnode.dev/adding-custom-documentation-to-apis-in-django-rest-framework-using-drf-yasg" target="_blank" rel="noopener noreferrer">
https://debrajbhal.hashnode.dev/adding-custom-documentation-to-apis-in-django-rest-framework-using-drf-yasg
&lt;/a>&lt;/p>
&lt;p>Add Post parameters: &lt;a href="https://stackoverflow.com/questions/50929098/django-rest-framework-how-to-add-post-parameters-to-api-documentdrf-yasg" target="_blank" rel="noopener noreferrer">
https://stackoverflow.com/questions/50929098/django-rest-framework-how-to-add-post-parameters-to-api-documentdrf-yasg
&lt;/a>&lt;/p>
&lt;p>Hard code response parameters: &lt;a href="https://stackoverflow.com/questions/62914407/drf-yasg-how-to-hide-django-rest-framework-schema" target="_blank" rel="noopener noreferrer">
https://stackoverflow.com/questions/62914407/drf-yasg-how-to-hide-django-rest-framework-schema
&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#import&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">drf_yasg.utils&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">swagger_auto_schema&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">drf_yasg&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">openapi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">rest_framework.decorators&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">api_view&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>For GET method:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#CBV version&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">TsView&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nd">@staticmethod&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nd">@api_view&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="s1">&amp;#39;GET&amp;#39;&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="c1">#it depend. Add it when you choose to write CBV&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nd">@swagger_auto_schema&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">operation_description&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;get ts info based on ts number&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">responses&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">200&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">openapi&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Response&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;request success&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">schema&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">openapi&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Schema&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">openapi&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">TYPE_ARRAY&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">openapi&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Schema&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">openapi&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">TYPE_OBJECT&lt;/span>&lt;span class="p">))),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">400&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;request failed&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">get_ts_info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ts_num&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> Retrieve the detailed information of a specific ts by its number.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> The returned information includes ts number, title, summary, series, and series title.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>For POST method:&lt;/p></description></item><item><title>Paper Management System Based on Vue-Springboot</title><link>https://jamesliu.space/posts/tech-paper-sys/</link><pubDate>Sun, 26 Feb 2023 00:00:00 +0000</pubDate><guid>https://jamesliu.space/posts/tech-paper-sys/</guid><description>&lt;p>Demo link: &lt;a href="https://www.bilibili.com/video/BV1dr4y1u7Vq/?spm_id_from=333.999.0.0" target="_blank" rel="noopener noreferrer">
ECNU-2022Spring-DatabaseTermProject Group 4_Bilibili
&lt;/a>&lt;/p>
&lt;h3 id="about-login-information-and-permission-display">About Login Information and Permission Display&lt;/h3>
&lt;p>Here, sessionStorage is used to store user information and permissions (ideally, they should be returned together as user information, but here they are stored separately). Subsequent access to the left Aside of the page can also be resolved based on the stored sessionStorage.&lt;/p>
&lt;blockquote>
&lt;p>&lt;em>The sessionStorage property allows you to access a session Storage object. It is similar to localStorage, except that the data stored in localStorage has no expiration time set, while the data stored in sessionStorage is cleared when the page session ends. The page session lasts as long as the browser is open, and reloading or restoring the page retains the original page session. &lt;strong>Opening a page in a new tab or window initializes a new session in the top-level browsing context,&lt;/strong> which is different from how session cookies work.&lt;/em>&lt;/p></description></item><item><title>2022 Year-End Review</title><link>https://jamesliu.space/posts/life-22-review/</link><pubDate>Sat, 31 Dec 2022 00:00:00 +0000</pubDate><guid>https://jamesliu.space/posts/life-22-review/</guid><description>&lt;p>&lt;strong>Note&lt;/strong>: This is a translation of my Chinese year-end review. I wrote it in Chinese because I wanted to express my thoughts more accurately. I&amp;rsquo;ve translated it into English using &lt;strong>Claude 3.7&lt;/strong> to share with more people. I hope you can understand and forgive any awkwardness in the translation.&lt;/p>
&lt;p>If I were to summarize my 2022, the pandemic would definitely be an unavoidable topic. Most of my growth, changes, thoughts, emotions, and confusion this year were closely tied to it—though I didn&amp;rsquo;t want it that way.&lt;/p></description></item><item><title>Hello World Again</title><link>https://jamesliu.space/posts/chapter-1/</link><pubDate>Sat, 09 Jul 2022 10:58:08 -0400</pubDate><guid>https://jamesliu.space/posts/chapter-1/</guid><description>&lt;p>This is the first day I started to write a blog. I&amp;rsquo;m not sure how long I can keep it up, but I&amp;rsquo;ll try my best. I hope I can record my life and thoughts here.&lt;/p></description></item></channel></rss>