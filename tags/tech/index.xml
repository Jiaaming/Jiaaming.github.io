<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tech on James Liu's Space</title><link>https://jamesliu.space/tags/tech/</link><description>Recent content in Tech on James Liu's Space</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Thu, 28 Aug 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://jamesliu.space/tags/tech/index.xml" rel="self" type="application/rss+xml"/><item><title>AWS Intern Reflection: Takeaways Beyond Tech</title><link>https://jamesliu.space/posts/aws-intern-reflection/</link><pubDate>Thu, 28 Aug 2025 00:00:00 +0000</pubDate><guid>https://jamesliu.space/posts/aws-intern-reflection/</guid><description>&lt;p>&lt;figure class="image-figure">
&lt;img src="https://raw.githubusercontent.com/Jiaaming/blogImage/main/pic/BAFC57A2-C3DD-4816-8C19-F67AB17D07E3_1_105_c.jpeg" alt="" />
&lt;/figure>&lt;/p>
&lt;p>Summer really flew by. These four months at AWS Vancouver were honestly the most unforgettable and fulfilling summer of my life. Besides Vancouver&amp;rsquo;s amazing weather, the project I worked on brought me huge challenges and satisfaction, plus the whole team had such an awesome vibe - it was basically a top-tier internship experience.&lt;/p>
&lt;p>This blog isn&amp;rsquo;t your typical technical post. I won&amp;rsquo;t (&lt;del>and can&amp;rsquo;t&lt;/del>) discuss specific technical solutions. Instead, I want to focus on what I learned throughout the internship and the moments that inspired me - just sharing my thoughts as an intern facing a massive and complex engineering system.&lt;/p></description></item><item><title>Microsoft Intern Summary: Optimizing VSCode Gradle Extension</title><link>https://jamesliu.space/posts/ms-intern-summary/</link><pubDate>Sat, 03 Aug 2024 00:00:00 +0000</pubDate><guid>https://jamesliu.space/posts/ms-intern-summary/</guid><description>&lt;ul>
&lt;li>&lt;a href="#project-background" target="_blank" rel="noopener noreferrer">
Project Background
&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#communication-between-servers" target="_blank" rel="noopener noreferrer">
Communication Between Servers
&lt;/a>&lt;/li>
&lt;li>&lt;a href="#architecture-before-the-merge" target="_blank" rel="noopener noreferrer">
Architecture Before the Merge
&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#why-merge" target="_blank" rel="noopener noreferrer">
Why Merge?
&lt;/a>&lt;/li>
&lt;li>&lt;a href="#how-to-merge" target="_blank" rel="noopener noreferrer">
How to Merge
&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#architecture-after-the-merge" target="_blank" rel="noopener noreferrer">
Architecture After the Merge
&lt;/a>&lt;/li>
&lt;li>&lt;a href="#step-1-merging-task-server-and-build-server" target="_blank" rel="noopener noreferrer">
Step 1: Merging Task Server and Build Server
&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#challenges" target="_blank" rel="noopener noreferrer">
Challenges
&lt;/a>&lt;/li>
&lt;li>&lt;a href="#connection-workflow" target="_blank" rel="noopener noreferrer">
Connection Workflow
&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#step-2-merging-language-server-to-gradle-server" target="_blank" rel="noopener noreferrer">
Step 2: Merging Language Server to Gradle Server
&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#performance-after-merge" target="_blank" rel="noopener noreferrer">
Performance After Merge
&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#how-was-performance-measured" target="_blank" rel="noopener noreferrer">
How Was Performance Measured?
&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#pre-merge-memory-monitoring" target="_blank" rel="noopener noreferrer">
Pre-Merge Memory Monitoring
&lt;/a>&lt;/li>
&lt;li>&lt;a href="#post-merge-memory-monitoring" target="_blank" rel="noopener noreferrer">
Post-Merge Memory Monitoring
&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#performance-results" target="_blank" rel="noopener noreferrer">
Performance Results
&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#small" target="_blank" rel="noopener noreferrer">
Small
&lt;/a>&lt;/li>
&lt;li>&lt;a href="#medium" target="_blank" rel="noopener noreferrer">
Medium
&lt;/a>&lt;/li>
&lt;li>&lt;a href="#large" target="_blank" rel="noopener noreferrer">
Large
&lt;/a>&lt;/li>
&lt;li>&lt;a href="#super-large" target="_blank" rel="noopener noreferrer">
Super Large
&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="project-background">Project Background&lt;/h2>
&lt;p>&lt;figure class="image-figure">
&lt;img src="https://raw.githubusercontent.com/Jiaaming/blogImage/main/pic/20240803213701.png" alt="Project Image" />
&lt;figcaption class="image-caption">Project Image&lt;/figcaption>
&lt;/figure>&lt;/p></description></item><item><title>Building a Simple AI Conversational Assistant with Langchain.js</title><link>https://jamesliu.space/posts/tech-pet-sys/</link><pubDate>Mon, 22 Apr 2024 00:00:00 +0000</pubDate><guid>https://jamesliu.space/posts/tech-pet-sys/</guid><description>&lt;p>For my final undergraduate professional course, Software Development Practicum, I was tasked with developing a virtual veterinary hospital learning system that required implementing an AI conversational assistant. The requirements were somewhat ambiguous. Considering that the other components consisted mainly of basic CRUD operations, my initial approach was to explore integrating these operations with an AI dialogue system capable of querying information about medications and clinical cases stored in the database.&lt;/p></description></item><item><title>Paper Management System Based on Vue-Springboot</title><link>https://jamesliu.space/posts/tech-paper-sys/</link><pubDate>Sun, 26 Feb 2023 00:00:00 +0000</pubDate><guid>https://jamesliu.space/posts/tech-paper-sys/</guid><description>&lt;p>Demo link: &lt;a href="https://www.bilibili.com/video/BV1dr4y1u7Vq/?spm_id_from=333.999.0.0" target="_blank" rel="noopener noreferrer">
ECNU-2022Spring-DatabaseTermProject Group 4_Bilibili
&lt;/a>&lt;/p>
&lt;h3 id="about-login-information-and-permission-display">About Login Information and Permission Display&lt;/h3>
&lt;p>Here, sessionStorage is used to store user information and permissions (ideally, they should be returned together as user information, but here they are stored separately). Subsequent access to the left Aside of the page can also be resolved based on the stored sessionStorage.&lt;/p>
&lt;blockquote>
&lt;p>&lt;em>The sessionStorage property allows you to access a session Storage object. It is similar to localStorage, except that the data stored in localStorage has no expiration time set, while the data stored in sessionStorage is cleared when the page session ends. The page session lasts as long as the browser is open, and reloading or restoring the page retains the original page session. &lt;strong>Opening a page in a new tab or window initializes a new session in the top-level browsing context,&lt;/strong> which is different from how session cookies work.&lt;/em>&lt;/p></description></item></channel></rss>